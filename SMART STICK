Wearing the belt and shoe with all those wires hanging all around will make the blind person uncomfortable. So, I came up with a better solution that is using a stick having all those featues of detecting the obstacles at the waist and toe level.
Additional to this I added an accelerometer so that by tilting the stick the person could be able to control the fan, light and other basic appliances of the home.
For the present code I made a resemblance of light and a fan using a LED and a MOTOR installed in the stick.

I have used two Ultrasonic sensors one at the waist level and another at the feet level. The accelerometer (ADXL335) is also attached to the stick


This is the following Arduino code:

const int trigPin1=8;
const int echoPin1=9;

const int trigPin2=4;
const int echoPin2=5;

const int buzzer = 11;

#include <math.h>
const int x_out = A1; /* connect x_out of module to A1 of UNO board */
const int y_out = A2; /* connect y_out of module to A2 of UNO board */
const int z_out = A3; /* connect z_out of module to A3 of UNO board */

const int relayPin=7;
int motor=3;

void setup() 
{
    Serial.begin (9600);
    pinMode(trigPin1, OUTPUT);
    pinMode(echoPin1, INPUT);
    pinMode(trigPin2, OUTPUT);
    pinMode(echoPin2, INPUT);
    pinMode(buzzer, OUTPUT);
    pinMode(relayPin,OUTPUT);
    pinMode(motor,OUTPUT);
}

void loop() 
{
    long duration1, distance1;
    digitalWrite(trigPin1, LOW);  // Added this line
    delayMicroseconds(2); // Added this line
    digitalWrite(trigPin1, HIGH);
    delayMicroseconds(10); // Added this line
    digitalWrite(trigPin1, LOW);
    duration1 = pulseIn(echoPin1, HIGH);
    distance1 = duration1*0.034/2;


    long duration2, distance2;
    digitalWrite(trigPin2, LOW);  // Added this line
    delayMicroseconds(2); // Added this line
    digitalWrite(trigPin2, HIGH);
    delayMicroseconds(10); // Added this line
    digitalWrite(trigPin2, LOW);
    duration2 = pulseIn(echoPin2, HIGH);
    distance2 = duration2*0.034/2;

if ((distance1<=25) && (distance2>=25))
{
      digitalWrite(buzzer, HIGH);
}
else if ((distance2<=25) && (distance1>=25))
{
      digitalWrite(buzzer, HIGH);
      delay(100);
      digitalWrite(buzzer, LOW);
      delay(100);
}
else if((distance1<25) && (distance2<25))
{
  digitalWrite(buzzer, HIGH);
      delay(10);
      digitalWrite(buzzer, LOW);
      delay(10);
}
else{
  digitalWrite(buzzer, LOW);
}

// for the accelerometer:

int x_adc_value, y_adc_value, z_adc_value; 
  double x_g_value, y_g_value, z_g_value;
  double roll, pitch, yaw;
  x_adc_value = analogRead(x_out); /* Digital value of voltage on x_out pin */ 
  y_adc_value = analogRead(y_out); /* Digital value of voltage on y_out pin */ 
  z_adc_value = analogRead(z_out); /* Digital value of voltage on z_out pin */ 
  Serial.print("x = ");
  Serial.print(x_adc_value);
  Serial.print("\t\t");
  Serial.print("y = ");
  Serial.print(y_adc_value);
  Serial.print("\t\t");
  Serial.print("z = ");
  Serial.print(z_adc_value);
  Serial.print("\t\t");
  //delay(100);
  
  x_g_value = ( ( ( (double)(x_adc_value * 5)/1024) - 1.65 ) / 0.330 ); /* Acceleration in x-direction in g units */ 
  y_g_value = ( ( ( (double)(y_adc_value * 5)/1024) - 1.65 ) / 0.330 ); /* Acceleration in y-direction in g units */ 
  z_g_value = ( ( ( (double)(z_adc_value * 5)/1024) - 1.80 ) / 0.330 ); /* Acceleration in z-direction in g units */ 

  roll = ( ( (atan2(y_g_value,z_g_value) * 180) / 3.14 ) + 180 ); /* Formula for roll */
  pitch = ( ( (atan2(z_g_value,x_g_value) * 180) / 3.14 ) + 180 ); /* Formula for pitch */
  //yaw = ( ( (atan2(x_g_value,y_g_value) * 180) / 3.14 ) + 180 ); /* Formula for yaw */
  /* Not possible to measure yaw using accelerometer. Gyroscope must be used if yaw is also required */

  Serial.print("Roll = ");
  Serial.print(roll);
  Serial.print("\t");
  Serial.print("Pitch = ");
  Serial.print(pitch);
  Serial.print("\n\n");
  delay(1000);

//conditions for making the led and motor ON or OFF
 if (pitch>=120)
 {
  digitalWrite(relayPin,HIGH);
  int p=64;
  analogWrite(motor,p);
 }
 else if(pitch<45)
 {
  digitalWrite(relayPin,LOW);
  int p=0; 
  analogWrite(motor,p);
 }

}
